		if (!Detector.webgl) {
            Detector.addGetWebGLMessage();
        }
        var container;
        var camera, controls, scene, renderer;
        var lighting, ambient, keyLight, fillLight, backLight;
        var windowHalfX = window.innerWidth / 2;
        var windowHalfY = window.innerHeight / 2;
        init();
        animate();
        function init() {
            container = document.createElement('div');
            document.body.appendChild(container);
			
            /* Camera */
            camera = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, - 500, 1000 );
            //camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 1, 1000);
            camera.position.z = 400;
			//camera.position.set(0,0,Math.max(window.innerWidth*3,window.innerHeight*3,.1*3));
			console.log(camera);
			
            /* Scene */
            scene = new THREE.Scene();
			camera.lookAt(scene.position);
            
			/* Lighting */
			//lighting = false;
            //ambient = new THREE.AmbientLight(0xffffff, 1.0);
            //scene.add(ambient);
            keyLight = new THREE.DirectionalLight(new THREE.Color('hsl(30, 100%, 75%)'), 1.0);
            keyLight.position.set(-100, 0, 100);
            fillLight = new THREE.DirectionalLight(new THREE.Color('hsl(240, 100%, 75%)'), 0.75);
            fillLight.position.set(100, 0, 100);
            backLight = new THREE.DirectionalLight(0xffffff, 1.0);
            backLight.position.set(100, 0, -100).normalize();
			
			scene.add(keyLight);
			scene.add(fillLight);
			scene.add(backLight);
			
            /* Model */
            var mtlLoader = new THREE.MTLLoader();
            mtlLoader.setTexturePath('Users\josh.hnat\Desktop');
            mtlLoader.setPath('');
            mtlLoader.load('girl.mtl', function (materials) {
                materials.preload();
                //materials.materials.default.map.magFilter = THREE.NearestFilter;
                //materials.materials.default.map.minFilter = THREE.LinearFilter;
                var objLoader = new THREE.OBJLoader();
                objLoader.setMaterials(materials);
                //objLoader.setPath('\');
                objLoader.load('girl.obj', function (object) {
					console.log(object);
					object.name = "3DModel";
					//object.castShadow = true;
					object.translateZ(-100);
					object.scale.z = 2;
					object.scale.x = 2;
					object.scale.y = 2;
					//object.position.set(0,0,0);
					//object.__dirtyPosition = true;
					//object.rotateX(-21);
					//object.translateOnAxis(new THREE.Vector3(50,100,0), .1);
                    scene.add(object);
                });
            });			
			
            /* Renderer */
            renderer = new THREE.WebGLRenderer();
            renderer.setPixelRatio(window.devicePixelRatio);
            renderer.setSize(window.innerWidth, window.innerHeight);
            renderer.setClearColor(new THREE.Color("hsl(0, 0%, 10%)"));
            container.appendChild(renderer.domElement);
			
            /* Controls */
            controls = new THREE.TrackballControls(camera, renderer.domElement);
            controls.enableDamping = true;
            //controls.dampingFactor = 0.65;
            //controls.enableZoom = true;
			
            /* Events */
            window.addEventListener('resize', onWindowResize, false);
            window.addEventListener('keydown', onKeyboardEvent, false);			
        }
        function onWindowResize() {
            windowHalfX = window.innerWidth / 2;
            windowHalfY = window.innerHeight / 2;
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        }
        function onKeyboardEvent(e) {
            /*if (e.code === 'KeyL') {
                lighting = !lighting;
                if (lighting) {
                    ambient.intensity = 0.25;
                    scene.add(keyLight);
                    scene.add(fillLight);
                    scene.add(backLight);
                } else {
                    ambient.intensity = 1.0;
                    scene.remove(keyLight);
                    scene.remove(fillLight);
                    scene.remove(backLight);
                }
            }*/
        }
        function animate() {
            requestAnimationFrame(animate);
            controls.update();
            render();
        }
        function render() {
            renderer.render(scene, camera);
        }
